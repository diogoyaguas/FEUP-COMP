/* Generated By:JJTree&JavaCC: Do not edit this line. ProgramConstants.java */
package src.AST;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface ProgramConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int SEMI_COLON = 7;
  /** RegularExpression Id. */
  int COMMA = 8;
  /** RegularExpression Id. */
  int PERIOD = 9;
  /** RegularExpression Id. */
  int L_PARENTHESIS = 10;
  /** RegularExpression Id. */
  int R_PARENTHESIS = 11;
  /** RegularExpression Id. */
  int L_CBRACKET = 12;
  /** RegularExpression Id. */
  int R_CBRACKET = 13;
  /** RegularExpression Id. */
  int L_BRACKET = 14;
  /** RegularExpression Id. */
  int R_BRACKET = 15;
  /** RegularExpression Id. */
  int EXCLM_MARK = 16;
  /** RegularExpression Id. */
  int NEW = 17;
  /** RegularExpression Id. */
  int THIS = 18;
  /** RegularExpression Id. */
  int TRUE = 19;
  /** RegularExpression Id. */
  int FALSE = 20;
  /** RegularExpression Id. */
  int LENGTH = 21;
  /** RegularExpression Id. */
  int ADD = 22;
  /** RegularExpression Id. */
  int SUB = 23;
  /** RegularExpression Id. */
  int AND = 24;
  /** RegularExpression Id. */
  int LESS_THAN = 25;
  /** RegularExpression Id. */
  int MUL = 26;
  /** RegularExpression Id. */
  int DIV = 27;
  /** RegularExpression Id. */
  int EQUAL = 28;
  /** RegularExpression Id. */
  int IF = 29;
  /** RegularExpression Id. */
  int ELSE = 30;
  /** RegularExpression Id. */
  int WHILE = 31;
  /** RegularExpression Id. */
  int INT = 32;
  /** RegularExpression Id. */
  int STRING = 33;
  /** RegularExpression Id. */
  int BOOLEAN = 34;
  /** RegularExpression Id. */
  int RETURN = 35;
  /** RegularExpression Id. */
  int PUBLIC = 36;
  /** RegularExpression Id. */
  int STATIC = 37;
  /** RegularExpression Id. */
  int VOID = 38;
  /** RegularExpression Id. */
  int MAIN = 39;
  /** RegularExpression Id. */
  int EXTENDS = 40;
  /** RegularExpression Id. */
  int CLASS = 41;
  /** RegularExpression Id. */
  int ID = 42;
  /** RegularExpression Id. */
  int DIGIT = 43;
  /** RegularExpression Id. */
  int INTEGER = 44;
  /** RegularExpression Id. */
  int LETTER = 45;
  /** RegularExpression Id. */
  int OCTAL = 46;
  /** RegularExpression Id. */
  int HEXA = 47;
  /** RegularExpression Id. */
  int BINARY = 48;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\r\"",
    "\"\\t\"",
    "\"\\n\"",
    "<token of kind 5>",
    "<token of kind 6>",
    "\";\"",
    "\",\"",
    "\".\"",
    "\"(\"",
    "\")\"",
    "\"{\"",
    "\"}\"",
    "\"[\"",
    "\"]\"",
    "\"!\"",
    "\"new\"",
    "\"this\"",
    "\"true\"",
    "\"false\"",
    "\"length\"",
    "\"+\"",
    "\"-\"",
    "\"&&\"",
    "\"<\"",
    "\"*\"",
    "\"/\"",
    "\"=\"",
    "\"if\"",
    "\"else\"",
    "\"while\"",
    "\"int\"",
    "\"String\"",
    "\"boolean\"",
    "\"return\"",
    "\"public\"",
    "\"static\"",
    "\"void\"",
    "\"main\"",
    "\"extends\"",
    "\"class\"",
    "<ID>",
    "<DIGIT>",
    "<INTEGER>",
    "<LETTER>",
    "<OCTAL>",
    "<HEXA>",
    "<BINARY>",
  };

}
